import java.math.BigDecimal;
import java.util.*;
class Solution{

    public static void main(String []args)
     {
        //Input
         Scanner sc= new Scanner(System.in);   //creating Scanner class object tp take user input
         int n=sc.nextInt();		       // taking Integer input from user
         String []s=new String[n+2];
         for(int i=0;i<n;i++){
            s[i]=sc.next();
          }
      	  sc.close();
	
	       
          TreeSet<BigDecimal> list = new TreeSet<BigDecimal>();    //Creating a treeset object 
          TreeSet<BigDecimal> listrev = new TreeSet<BigDecimal>(); 
          for (int k=0;k<n;k++)
           {
             list.add(new BigDecimal(s[k]));
           }
          listrev = (TreeSet)list.descendingSet(); 
          Object[] num =  listrev.toArray();
          BigDecimal[] p = new BigDecimal[num.length];
          
          for (int k=0; k<num.length;k++)
           {
             p[k] = (BigDecimal)num[k];          
           }
          
          String [] x=new String[n];
          int count = 0;
          for (int k=0; k<p.length;k++)
           {
                 for (int l=0; l<s.length-2;l++)
                 {
                     if(p[k].compareTo(new BigDecimal(s[l])) == 0) 
                     {
                         x[count]=s[l];
                         count++;
                         
                     }         
                 }           
           }
        s=x;

      //Output
        for(int i=0;i<n;i++)
        {
            System.out.println(s[i]);
        }
    }

}
           